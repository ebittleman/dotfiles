{
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "editor.rulers": [
    80
  ],
  "editor.renderWhitespace": "all",
  "jupyter.askForKernelRestart": false,
  "jupyter.disableJupyterAutoStart": true,
  "jupyter.runStartupCommands": [
    "%load_ext autoreload\n%autoreload 2\n"
  ],
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "redhat.telemetry.enabled": false,
  "cSpell.userWords": [
    "abind",
    "accesslog",
    "aenter",
    "aexit",
    "agen",
    "Amato",
    "APICQRS",
    "APIUOW",
    "Archimate",
    "asctime",
    "asdict",
    "asyncclosing",
    "asyncio",
    "asyncpg",
    "atake",
    "authlib",
    "authn",
    "autoflush",
    "autoreload",
    "azuretools",
    "backends",
    "backoff",
    "Backpatch",
    "BADDCAFE",
    "Bautista",
    "biotrack",
    "Bittleman",
    "bname",
    "boto",
    "botocore",
    "bpack",
    "Buildpack",
    "buildpacks",
    "buus",
    "bytea",
    "Canalicious",
    "Cannabiz",
    "CANNALICIOUS",
    "Cblas",
    "charliermarsh",
    "Chunker",
    "classif",
    "CMPT",
    "cobertura",
    "Colourized",
    "companybilling",
    "companylicense",
    "coro",
    "cpuprofile",
    "cqrs",
    "CQRSSQL",
    "creds",
    "Curaleaf",
    "curr",
    "daemonized",
    "datefmt",
    "DBAPI",
    "dbcli",
    "ddtags",
    "ddtrace",
    "deps",
    "deserializes",
    "devcontainer",
    "devcontainers",
    "digifi",
    "digify",
    "distfile",
    "Dockerfiles",
    "dotenv",
    "dramatiq",
    "eamodio",
    "endmacro",
    "envvar",
    "esbenp",
    "eventbus",
    "executemany",
    "fastapi",
    "firehoses",
    "Fivetran",
    "formdata",
    "funcs",
    "getenv",
    "getmro",
    "goimports",
    "gunicorn",
    "gzipped",
    "hackathon",
    "healthz",
    "httpcore",
    "httpx",
    "hubspot",
    "Idempotency",
    "IEXEC",
    "ilike",
    "Inarguably",
    "Infoplus",
    "innerjoin",
    "Insighted",
    "ipynb",
    "iscoroutine",
    "iscoroutinefunction",
    "isort",
    "isouter",
    "itertools",
    "jacoco",
    "jerr",
    "joinedload",
    "jsonable",
    "JSONAPI",
    "jsonlogger",
    "junc",
    "JWKS",
    "JWTs",
    "KEDA",
    "keepalive",
    "klass",
    "klasses",
    "kubernetes",
    "kwargs",
    "lcov",
    "leaflink",
    "leaflogger",
    "levelname",
    "levelprefix",
    "licensetype",
    "livez",
    "Ljtn",
    "llpctl",
    "Mailtrap",
    "marketscape",
    "Markey",
    "maxsplit",
    "mdict",
    "Medge",
    "memprofile",
    "Metrc",
    "Mimick",
    "mirumee",
    "MULT",
    "multitenant",
    "mybi",
    "myobject",
    "myorg",
    "mypy",
    "nchz",
    "networkx",
    "nikobockerman",
    "OIDC",
    "openapi",
    "openid",
    "outerjoin",
    "outp",
    "pandoc",
    "passthru",
    "patsubst",
    "paymentmethodtype",
    "paymeth",
    "pbkdf",
    "pell",
    "permittedactivity",
    "Pinconning",
    "plantuml",
    "plotly",
    "poolclass",
    "popd",
    "popleft",
    "precomputes",
    "prereqs",
    "primaryjoin",
    "psql",
    "psswd",
    "psycopg",
    "puml",
    "pushd",
    "PYAPP",
    "pydantic",
    "pydecimal",
    "pydistdir",
    "pydot",
    "pyglob",
    "pyjwt",
    "pylib",
    "pylibs",
    "pylint",
    "pyll",
    "pypack",
    "pypoetry",
    "pyproject",
    "pystr",
    "pytest",
    "pytestmark",
    "pythonjsonlogger",
    "pythonpath",
    "pytz",
    "quickbooks",
    "rdbms",
    "readyz",
    "recontextualize",
    "recordset",
    "reexecute",
    "referer",
    "REKT",
    "rels",
    "reqs",
    "roadmap",
    "Rollup",
    "rowid",
    "rsakey",
    "ruleset",
    "ryanluker",
    "sbqq",
    "scminput",
    "scopefunc",
    "scpr",
    "SDLC",
    "selectin",
    "selectinload",
    "serializable",
    "sessionmaker",
    "setprop",
    "sgemm",
    "Shelbyville",
    "Shonte",
    "significand",
    "signup",
    "simplejwt",
    "simplejwt's",
    "simplexity",
    "Sost",
    "splitio",
    "sqla",
    "sqlalchemy",
    "srcs",
    "starlette",
    "strawman",
    "struct",
    "subqueryload",
    "subscprod",
    "swappable",
    "tamasfe",
    "tein",
    "telos",
    "thang",
    "thirdparty",
    "tmpfs",
    "tmpl",
    "tname",
    "todict",
    "todos",
    "TOGAF",
    "toolset",
    "tqdm",
    "Traceback",
    "transactionally",
    "udts",
    "unchucked",
    "upsert",
    "upserts",
    "useragent",
    "userinfo",
    "uvicorn",
    "valuelist",
    "venv",
    "viewonly",
    "virtualenvs",
    "weasy",
    "weasymain",
    "weasyprint",
    "werkzeug",
    "wsgi",
    "wtforms",
    "WYSISYG",
    "WYSIWIG"
  ],
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "python.experiments.enabled": false,
  "python.testing.pytestEnabled": true,
  "[python]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "go.formatTool": "goimports",
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "yaml.schemas": {},
  "aws.telemetry": false,
  "json.schemas": [],
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "coverage-gutters.coverageFileNames": [
    "lcov.info",
    "cov.xml",
    "coverage.xml",
    "jacoco.xml",
    "coverage.cobertura.xml"
  ],
  "cSpell.enableFiletypes": [
    "dot",
    "plantuml"
  ],
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "scminput": false,
    "yaml": false,
    "plantuml": false
  },
  "jupyter.interactiveWindow.textEditor.executeSelection": true,
  "notebook.output.textLineLimit": 300,
  "[markdown]": {
    "files.trimTrailingWhitespace": true,
    "editor.tabSize": 4,
    "editor.indentSize": "tabSize",
    "editor.formatOnSave": true,
    "editor.detectIndentation": true,
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "files.associations": {
    ".env": "shellscript"
  },
  "black-formatter.importStrategy": "fromEnvironment",
  "ruff.fixAll": true,
  "ruff.organizeImports": true,
  "mypy-type-checker.args": [
    "--no-color-output",
    "--no-error-summary",
    "--show-absolute-path",
    "--show-column-numbers",
    "--show-error-codes",
    "--no-pretty",
    "--ignore-missing-imports",
    "--show-column-numbers",
    "--no-pretty",
    "--show-error-end"
  ],
  "mypy-type-checker.importStrategy": "fromEnvironment",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "application.shellEnvironmentResolutionTimeout": 20,
  "workbench.editor.empty.hint": "hidden",
  "oso.polarLanguageServer.metrics.enabled": "off",
  "isort.importStrategy": "fromEnvironment",
  "makefile.configureOnOpen": false,
  "[sql]": {
    "editor.defaultFormatter": "ms-ossdata.vscode-postgresql"
  },
  "github.copilot.editor.enableAutoCompletions": true,
  "git.openRepositoryInParentFolders": "never",
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.env.osx": {
    "DYLD_LIBRARY_PATH": "/opt/homebrew/lib"
  },
  "python.analysis.autoImportCompletions": true,
  "editor.formatOnSave": true,
  "explorer.confirmDelete": false,
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.automationProfile.linux": {
    "path": "/usr/bin/zsh"
  },
  "terminal.integrated.enableMultiLinePasteWarning": "never"
}